module Graft
  class Stack < Array[Callback]
    class EmptyStackError < StandardError
    end

    type env = ::Hash[untyped, untyped]
    type ret = ::Hash[untyped, untyped]

    def self.new: () -> Stack
                | (Array[Callback]) -> Stack

    def call: (?env env) -> ret

    def head: () -> Callback

    def tail: () -> Stack
  end
end
